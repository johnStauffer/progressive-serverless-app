Resources:
  CognitoUserPool:
      Type: "AWS::Cognito::UserPool"
      Properties:
        MfaConfiguration: OFF
        UserPoolName: ${self:custom.userPoolName}
        UsernameAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 6
            RequireLowercase: False
            RequireNumbers: True
            RequireSymbols: False
            RequireUppercase: True
  CognitoUserPoolClient:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
      ClientName: ${self:custom.userPoolClientName}
      GenerateSecret: False
      UserPoolId:
        Ref: CognitoUserPool
  ApiGatewayAuthorizer:
    DependsOn:
      - ApiGatewayRestApi
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: cognito-authorizer
      IdentitySource: method.request.header.Authorization
      RestApiId:
        Ref: ApiGatewayRestApi
      Type: COGNITO_USER_POOLS
      ProviderARNs:
        - Fn::GetAtt: [CognitoUserPool, Arn]
Outputs:
  CognitoUserPoolArn:
    Value:
      Fn::GetAtt:
        - CognitoUserPool
        - Arn
    Export:
      Name: CognitoUserPoolArn-${self:custom.currentStage