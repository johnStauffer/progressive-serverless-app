org: johnstauffer
app: serverless-progressive-app

service: progressive-serverless-app

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  currentStage: ${opt:stage, self:provider.stage}
  # Set the table name here so we can use it while testing locally
  usersTableName: users-${self:custom.currentStage}

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-1

  # These environment variables are made available to our functions
  # under process.env.
  environment:
    usersTableName: ${self:custom.usersTableName}

  # iamRoleStatements:
  #   - Effect: Allow
  #     Action:
  #       - dynamodb:DescribeTable
  #       - dynamodb:Query
  #       - dynamodb:Scan
  #       - dynamodb:GetItem
  #       - dynamodb:PutItem
  #       - dynamodb:UpdateItem
  #       - dynamodb:DeleteItem
  #     # Restrict our IAM role permissions to
  #     # the specific table for the
  #     Resource:
  #       - "Fn::GetAtt": [UsersTable, Arn]

functions:
  # Defines an HTTP API endpoint that calls the main function in create.js
  # - path: url path is /users/create
  # - method: POST request
  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  #     domain api call
  # - authorizer: authenticate using the AWS IAM role

  storeUser:
    handler: lambdas/storeUser.handler
    events:
      - http:
          path: /users/create
          method: post
          cors: true
  guests:
    handler: lambdas/helloworld.handler
    events:
      - http:
          path: /helloworld
          method: get

# resources:
  # - ${file(resources/api-gateway-authorizer.yml)}
  # DynamoDB
  # - ${file(resources/dynamodb-users.yml)}
  # Cognito
  # - ${file(resources/cognito-user-pool.yml)}
  # - ${file(resources/cognito-identity-pool.yml)}
