org: johnstauffer
app: serverless-progressive-app

service: progressive-serverless-app

# where service will be deployed
provider:
  name: aws
  runtime: nodejs10.x
  region: us-east-1
  stage: ${self:custom.currentStage}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "*"
        # - "Fn::GetAtt": [UsersTable, Arn]
        # - "Fn::GetAtt": [WorkersTable, Arn]
        # - "Fn::GetAtt": [ProjectsTable, Arn]

custom:
  defaultStage: dev1
  currentStage: ${opt:stage, self:custom.defaultStage}
  userPoolName: pwa-user-pool-${self:custom.currentStage}
  userPoolClientName: pwa-user-pool-client-${self:custom.currentStage}
  usersTableName: users-${self:custom.currentStage}
  workersTableName: workers-${self:custom.currentStage}
  projectsTableName: projects-${self:custom.currentStage}

environment:
  USER_TABLE_NAME: ${self:custom.usersTableName}
  WORKERS_TABLE_NAME: ${self:custom.workersTableName}
  PROJECTS_TABLE_NAME: ${self:custom.projectsTableName}

functions:
  users:
    handler: lambdas/userCrud.createUser
    events:
      - http:
          path: /users/create
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
  getUser:
    handler: lambdas/userCrud.getUser
    events:
      - http:
          path: /users/getUser
          method: get
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
  getWorkers:
    handler: lambdas/workers.getWorkersForTask
    events:
      - http:
          path: /workers/
          method: get
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
  createProject:
    handler: lambdas/projects.createProject
    events:
      - http:
          path: /projects/create
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
  getProjects:
    handler: lambdas/projects.getProjects
    events:
      - http:
          path: /projects
          method: get
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
resources:
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/api-gateway-authorizer.yml)}
  - ${file(resources/dynamodb-users.yml)}
  - ${file(resources/dynamodb-workers.yml)}
  - ${file(resources/dynamodb-projects.yml)}
  - ${file(resources/api-gateway-errors.yml)}
