org: johnstauffer
app: serverless-progressive-app

service: progressive-serverless-app

# where service will be deployed
provider:
  name: aws
  runtime: nodejs10.x
  region: us-east-1
  stage: ${self:custom.currentStage}

iamRoleStatements:
- Effect: Allow
  Action:
    - dynamodb:DescribeTable
    - dynamodb:Query
    - dynamodb:Scan
    - dynamodb:GetItem
    - dynamodb:PutItem
    - dynamodb:UpdateItem
    - dynamodb:DeleteItem
  # Restrict our IAM role permissions to
  # the specific table for the stage


custom:
  defaultStage: dev
  currentStage: ${opt:stage, self:custom.defaultStage}
  userPoolName: pwa-user-pool-${self:custom.currentStage}
  userPoolClientName: pwa-user-pool-client-${self:custom.currentStage}
  usersTableName: users-${self:custom.currentStage}

environment:
  USER_TABLE_NAME: ${self:custom.usersTableName}

functions:
  registeredOnly:
    handler: lambdas/cognitotest.hiUsers
    events:
      - http:
          path: /hiUsers
          method: get
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
          cors:
            origin: "http://localhost:3000"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
  guests:
    handler: lambdas/cognitotest.hiGuests
    events:
      - http:
          path: /hiAll
          method: get
  users:
    handler: lambdas/userCrud.createUser
    iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "*"
    events:
      - http:
          path: /users/create
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
resources:
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/api-gateway-authorizer.yml)}
  - ${file(resources/dynamodb-users.yml)}

