<!DOCTYPE html>
<html>
{{> global-head}}
<body>
	{{> header}}
	<main id="main" class="container container-small">
		<h2>Create Project</h2>
		<form id="js-form-project-create" action="" method="POST" class="">
			<div class="input-wrapper">
				<label for="project-type">Type Of Project</label>
				<select id="project-type" name="project_type">
					<option value="">-</option>
					<option value="bathroom-remodel">Bathroom Remodel</option>
					<option value="garage-remodel">Garage Remodel</option>
					<option value="kitchen-remodel">Kitchen Remodel</option>
					<option value="rooftop-remodel">Rooftop Remodel</option>
				</select>
			</div>
			<div class="input-wrapper">
				<label for="project-contact-day">Preferred Contact Day</label>
				<select id="project-contact-day" name="project_contact_day">
					<option value="">-</option>
					<option value="monday">Monday</option>
					<option value="tuesday">Tuesday</option>
					<option value="wednesday">Wednesday</option>
					<option value="thursday">Thursday</option>
					<option value="friday">Friday</option>
					<option value="saturday">Saturday</option>
					<option value="sunday">Sunday</option>
				</select>
			</div>
			<div class="input-wrapper">
				<label for="project-contact-time">Preferred Contact Time</label>
				<select id="project-contact-time" name="project_contact_time">
					<option value="">-</option>
					<option value="morning">Morning</option>
					<option value="afternoon">Afternoon</option>
					<option value="evening">Evening</option>
				</select>
			</div>
			<div class="input-wrapper">
				<label for="project-description">Project Description</label>
				<textarea id="project-description" name="project_description" class="input" rows="8" columns="4"
					resize></textarea>
			</div>
			{{!-- <div class="input-wrapper">
				<label for="project-pictures">Project Pictures</label>
				<input id="project-pictures" type="file" name="project_pictures" class="input" multiple />
			</div> --}}
			{{!-- <div id='file-list-display'></div> --}}
			<div class="input-wrapper">
				<input type="submit" value="Create Project" class="input" />
			</div>
		</form>
	</main>
	<footer>

	</footer>
	<script src="/js/atomic.polyfills.min.js"></script>
	{{> global-scripts}}
	<script type="text/javascript">

		function createProject(project) {
			/* get logged in user idToken */
			var poolData = {
				UserPoolId: 'us-east-1_fIIpe0d9e', // Your user pool id here
				ClientId: '48d0a2d8dq14iivse1t20nrd7h' // Your client id here
			};
			var userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData);
			// get current user based on local storage
			var cognitoUser = userPool.getCurrentUser();
			// if no user then ask email
			if (cognitoUser != null) {
				cognitoUser.getSession(function (err, session) {
					if (err) {
						alert(err.message || JSON.stringify(err));
						return;
					}
					/* post user to Dynamo Db */
					atomic('https://3ou38g64pb.execute-api.us-east-1.amazonaws.com/dev1/projects/create', {
						method: 'POST',
						headers: {
							'Authorization': session.getIdToken().getJwtToken(),
							'Content-type': 'application/json'
						},
						data: {
							projectType: project.projectType,
							projectContactDay: project.projectContactDay,
							projectContactTime: project.projectContactTime,
							projectDescription: project.projectDescription,
						}
					})
						.then(function (response) {
							console.log(response);
							window.location.href = "/project-confirmation.html";
							// console.log(response.data); // xhr.responseText
							// console.log(response.xhr);  // full response
						})
						.catch(function (error) {
							console.error(error);
							// console.log(error.status); // xhr.status
							// console.log(error.statusText); // xhr.statusText
						});
				});
			}
		}

		var form = document.querySelector('#js-form-project-create');
		var fileInput = document.getElementById('project-pictures');
		var fileListDisplay = document.getElementById('file-list-display');
		var fileList = [];
		var renderFileList;
		var sendFile;

		form.addEventListener('submit', function (e) {
			e.preventDefault();
			var projectDetails = {
				projectType: form.elements['project_type'].value,
				projectContactDay: form.elements['project_contact_day'].value,
				projectContactTime: form.elements['project_contact_time'].value,
				projectDescription: form.elements['project_description'].value,
			};
			// determine how to handle creation of project based on network
			if( navigator.onLine ) {
        createProject(projectDetails);
			} else {
        saveData(projectDetails);
			}
			
			/*
			fileList.forEach(function(file) {
				sendFile(file);
			});
			*/
		});
		/*
		fileInput.addEventListener('change', function (evnt) {
			fileList = [];
			for (var i = 0; i < fileInput.files.length; i++) {
				fileList.push(fileInput.files[i]);
			}
			renderFileList();
		});
		*/
		/*
		function renderFileList() {
			fileListDisplay.innerHTML = '';
			fileList.forEach(function (file, index) {
				var fileDisplayEl = document.createElement('p');
				fileDisplayEl.innerHTML = (index + 1) + ': ' + file.name;
				fileListDisplay.appendChild(fileDisplayEl);
			});
		};
		*/
		/*
		function sendFile(file) {
			console.log('send file', file);
			atomic('')
				.then(function (response) {
					// console.log(response);
					// console.log(response.data); // xhr.responseText
					// console.log(response.xhr);  // full response
					var dynamicContentArea = document.querySelector('#js-partial-projects');
					if( dynamicContentArea ) {
						dynamicContentArea.innerHTML = response.data;
					}
				})
				.catch(function (error) {
					console.error(error);
					// console.log(error.status); // xhr.status
					// console.log(error.statusText); // xhr.statusText
				});
		};
		*/

		/* handle creation of project when offline by saving to indexDB */

		function saveData(project) {
			return new Promise(function(resolve, reject) {
				var projectDetails = {
					projectType: project.projectType,
					projectContactDay: project.projectContactDay,
					projectContactTime: project.projectContactTime,
					projectDescription: project.projectDescription
				};
			
				var nonAwsProjectsObjStore = window.indexedDB.open('non_aws_projects');

				nonAwsProjectsObjStore.onsuccess = function(event) {
					var objStore = this.result
						.transaction('nonAwsProjectsObjStore', 'readwrite')
						.objectStore('nonAwsProjectsObjStore');
					objStore.add(projectDetails);
					resolve();
				}

				nonAwsProjectsObjStore.onerror = function(err) {
					reject(err);
				}
		});
	}

	</script>
</body>

</html>